.form {
  &__group:not(:last-child) {
    margin-bottom: 2rem;
  }

  &__input {
    font-size: 1.5rem;
    font-family: inherit;
    color: inherit;
    padding: 1.5rem 2rem;
    border-radius: 2px;
    background-color: rbga($color-white, 0.5);
    border: none;
    border-bottom: 3px solid transparent;
    width: 90%;
    display: block;
    transition: all 0.3s;

    &:focus {
      outline: none;
      box-shadow: 0 1rem 2rem rgba($color-black, 0.1);
      border-bottom: 3px solid $color-primary;
    }

    &:focus:invalid {
      border-bottom: 3px solid $color-secondary-dark;
    }

    &::-webkit-input-placeholder {
      color: $color-grey-dark-2;
    }
  }

  &__label {
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 2rem;
    margin-top: 0.7rem;
    display: block;
    transition: all 0.3s;
  }

  &__input:placeholder-shown + &__label {
    opacity: 0;
    visibility: hidden;
    transform: translateY(-4rem);
  }

  &__radio-group {
    width: 49%;
    display: inline-block;
  }

  &__radio-input {
    // position: absolute;
    opacity: 0;
  }

  &__radio-label {
    font-size: $default-font-size;
    cursor: pointer;
    position: relative;
    padding-left: 4.5rem;
  }

  &__radio-button {
    height: 3rem;
    width: 3rem;
    border: 5px solid $color-primary;
    border-radius: 50%;
    display: inline-block;
    position: absolute;
    left: 0;
    top: -0.4rem;

    &::after {
      content: "";
      display: block;
      height: 1.3rem;
      width: 1.3rem;
      border-radius: 50%;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: $color-primary;
      opacity: 0;
      transition: opacity 0.2s;
    }
  }

  &__radio-input:checked ~ &__radio-button::after {
    opacity: 1;
  }
}

/* 
How I fixed the radio buttons:

Just some extra stuff I learned after messing around with this particular lesson. Thanks to the awesome stuff I have gained thus far thanks to Jonas and this awesome course.

You should also style the focus for your radio button.

But to do so, you cannot have your radio set to

display: none;

But instead you need to set it to :

&__radio-input {
    // position: absolute;
    opacity: 0;
}
 
// NOTE: if you want to keep it from throwing off your alignment, use position absolute.




Because display: none; is not select-able via the tab key since it is not actually on the page.



Then add this code to your scss

&__radio-input:focus ~ &__radio-label &__radio-button::after {
    opacity: 1;
}
or if you want to keep is snazzy like Jonas then you should do

&__radio-input:checked ~ &__radio-label &__radio-button::after,
&__radio-input:focus ~ &__radio-label &__radio-button::after{
    opacity: 1;
}

That's what you need to target it.




Also found out here that we are doing a few extra steps that in the current design we might not need.

In index.html, we could wrap the radio button in the label, and remove the need for a id="" on the input and a for="" on the label.  so now the __radio-input and __radio-button would be siblings, Like so:

<label class="form__radio-label">
    Large tour group
    <input type="radio" class="form__radio-input" name="size">
    <span class="form__radio-button"></span>
</label>
Then in your _form.scss, you could shorten the specification with the following line instead.

&__radio-input:checked ~ &__radio-button::after,  {
    opacity: 1;
}
So really, both ways work perfectly, This one is a bit shorter, but could be infinite reasons to not do this for sure, especially if you want to move the label or the custom designed span element somewhere else on the page for some reason ( I can think of many applications for that ) using absolute positioning to a parent or something. With Jonas's method, I also found that you can move the span form__radio-button outside of the label for more positioning options ( Using absolute ) and it will still work as long as they share a parent div. Like so:

<div class="form__radio-group">
<input type="radio" class="form__radio-input" id="small" name="size">
    <label for="small" class="form__radio-label">
    Small tour group
    </label>
    <span class="form__radio-button"></span>
</div>
I am sure using this method, some really cool hacky things could be done with radial buttons or check boxes, for example: custom animated markers on a map, on a map you could cycle through icons that open up over cities by clicking the city name. etc... and so much more.


I just wanted to dig into how this worked and WS3Schools showed that you can wrap the input inside the label and then you do not need to give it an ID, just thought I would share with others who may be interested in knowing as much as possible about how it works.

Cheers ;-)
*/
